// <auto-generated />
using System;
using AkarSoftware.HospitalApp.Repositories.Concrete.EntityFramework.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AkarSoftware.HospitalApp.Repositories.Migrations
{
    [DbContext(typeof(MyContexts))]
    [Migration("20240407080213_mig1")]
    partial class mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AkarSoftware.HospitalApp.Entities.Concrete.Identities.AppMenus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionParameters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AppModulesId")
                        .HasColumnType("int");

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControllerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("IconName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MenuDesctiption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RootMenusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppModulesId");

                    b.HasIndex("RootMenusId");

                    b.ToTable("AppMenus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActionName = "Randevu Al",
                            ActionParameters = "",
                            AppModulesId = 1,
                            AreaName = "Randevu Al",
                            ControllerName = "Randevu Al",
                            CreatedDate = new DateTime(2024, 4, 7, 11, 2, 12, 154, DateTimeKind.Local).AddTicks(4073),
                            CreatedUser = "APP",
                            CreatedUserId = 0,
                            IconName = "Randevu Al",
                            IsActive = true,
                            MenuDesctiption = "Randevu Al",
                            MenuName = "Randevu Al",
                            ModifiedDate = new DateTime(2024, 4, 7, 11, 2, 12, 154, DateTimeKind.Local).AddTicks(4087),
                            ModifiedUserId = 0,
                            ModifiedUserName = "APP"
                        },
                        new
                        {
                            Id = 1001,
                            ActionName = "Randevu Al",
                            ActionParameters = "",
                            AppModulesId = 1,
                            AreaName = "Randevu Al",
                            ControllerName = "Randevu Al",
                            CreatedDate = new DateTime(2024, 4, 7, 11, 2, 12, 154, DateTimeKind.Local).AddTicks(4090),
                            CreatedUser = "APP",
                            CreatedUserId = 0,
                            IconName = "Randevu Al",
                            IsActive = true,
                            MenuDesctiption = "Randevu Al",
                            MenuName = "Randevu Al 2 ",
                            ModifiedDate = new DateTime(2024, 4, 7, 11, 2, 12, 154, DateTimeKind.Local).AddTicks(4091),
                            ModifiedUserId = 0,
                            ModifiedUserName = "APP",
                            RootMenusId = 1
                        },
                        new
                        {
                            Id = 1002,
                            ActionName = "Randevu Al",
                            ActionParameters = "",
                            AppModulesId = 1,
                            AreaName = "Randevu Al",
                            ControllerName = "Randevu Al",
                            CreatedDate = new DateTime(2024, 4, 7, 11, 2, 12, 154, DateTimeKind.Local).AddTicks(4093),
                            CreatedUser = "APP",
                            CreatedUserId = 0,
                            IconName = "Randevu Al",
                            IsActive = true,
                            MenuDesctiption = "Randevu Al",
                            MenuName = "Randevu Al 2 - 2 ",
                            ModifiedDate = new DateTime(2024, 4, 7, 11, 2, 12, 154, DateTimeKind.Local).AddTicks(4094),
                            ModifiedUserId = 0,
                            ModifiedUserName = "APP",
                            RootMenusId = 1
                        },
                        new
                        {
                            Id = 1003,
                            ActionName = "Randevu Al",
                            ActionParameters = "",
                            AppModulesId = 1,
                            AreaName = "Randevu Al",
                            ControllerName = "Randevu Al",
                            CreatedDate = new DateTime(2024, 4, 7, 11, 2, 12, 154, DateTimeKind.Local).AddTicks(4096),
                            CreatedUser = "APP",
                            CreatedUserId = 0,
                            IconName = "Randevu Al",
                            IsActive = true,
                            MenuDesctiption = "Randevu Al",
                            MenuName = "Randevu Al 3 - 1  ",
                            ModifiedDate = new DateTime(2024, 4, 7, 11, 2, 12, 154, DateTimeKind.Local).AddTicks(4097),
                            ModifiedUserId = 0,
                            ModifiedUserName = "APP",
                            RootMenusId = 1002
                        },
                        new
                        {
                            Id = 1004,
                            ActionName = "Randevu Al",
                            ActionParameters = "",
                            AppModulesId = 1,
                            AreaName = "Randevu Al",
                            ControllerName = "Randevu Al",
                            CreatedDate = new DateTime(2024, 4, 7, 11, 2, 12, 154, DateTimeKind.Local).AddTicks(4099),
                            CreatedUser = "APP",
                            CreatedUserId = 0,
                            IconName = "Randevu Al",
                            IsActive = true,
                            MenuDesctiption = "Randevu Al",
                            MenuName = "asdasdasd ",
                            ModifiedDate = new DateTime(2024, 4, 7, 11, 2, 12, 154, DateTimeKind.Local).AddTicks(4099),
                            ModifiedUserId = 0,
                            ModifiedUserName = "APP",
                            RootMenusId = 1002
                        },
                        new
                        {
                            Id = 1005,
                            ActionName = "Randevu Al",
                            ActionParameters = "",
                            AppModulesId = 1,
                            AreaName = "Randevu Al",
                            ControllerName = "Randevu Al",
                            CreatedDate = new DateTime(2024, 4, 7, 11, 2, 12, 154, DateTimeKind.Local).AddTicks(4101),
                            CreatedUser = "APP",
                            CreatedUserId = 0,
                            IconName = "Randevu Al",
                            IsActive = true,
                            MenuDesctiption = "Randevu Al",
                            MenuName = "Randevu Al 3 - 2  ",
                            ModifiedDate = new DateTime(2024, 4, 7, 11, 2, 12, 154, DateTimeKind.Local).AddTicks(4102),
                            ModifiedUserId = 0,
                            ModifiedUserName = "APP",
                            RootMenusId = 1004
                        },
                        new
                        {
                            Id = 1006,
                            ActionName = "Randevu Al",
                            ActionParameters = "",
                            AppModulesId = 1,
                            AreaName = "Randevu Al",
                            ControllerName = "Randevu Al",
                            CreatedDate = new DateTime(2024, 4, 7, 11, 2, 12, 154, DateTimeKind.Local).AddTicks(4104),
                            CreatedUser = "APP",
                            CreatedUserId = 0,
                            IconName = "Randevu Al",
                            IsActive = true,
                            MenuDesctiption = "Randevu Al",
                            MenuName = "Randevu 34534534  ",
                            ModifiedDate = new DateTime(2024, 4, 7, 11, 2, 12, 154, DateTimeKind.Local).AddTicks(4105),
                            ModifiedUserId = 0,
                            ModifiedUserName = "APP",
                            RootMenusId = 1004
                        },
                        new
                        {
                            Id = 1010,
                            ActionName = "Randevu Al",
                            ActionParameters = "",
                            AppModulesId = 1,
                            AreaName = "Randevu Al",
                            ControllerName = "Randevu Al",
                            CreatedDate = new DateTime(2024, 4, 7, 11, 2, 12, 154, DateTimeKind.Local).AddTicks(4107),
                            CreatedUser = "APP",
                            CreatedUserId = 0,
                            IconName = "Randevu Al",
                            IsActive = true,
                            MenuDesctiption = "Randevu Al",
                            MenuName = "Randevu 234234234 ",
                            ModifiedDate = new DateTime(2024, 4, 7, 11, 2, 12, 154, DateTimeKind.Local).AddTicks(4108),
                            ModifiedUserId = 0,
                            ModifiedUserName = "APP",
                            RootMenusId = 1006
                        },
                        new
                        {
                            Id = 1020,
                            ActionName = "Randevu Al",
                            ActionParameters = "",
                            AppModulesId = 1,
                            AreaName = "Randevu Al",
                            ControllerName = "Randevu Al",
                            CreatedDate = new DateTime(2024, 4, 7, 11, 2, 12, 154, DateTimeKind.Local).AddTicks(4110),
                            CreatedUser = "APP",
                            CreatedUserId = 0,
                            IconName = "Randevu Al",
                            IsActive = true,
                            MenuDesctiption = "Randevu Al",
                            MenuName = "Randevu Al 123123123  ",
                            ModifiedDate = new DateTime(2024, 4, 7, 11, 2, 12, 154, DateTimeKind.Local).AddTicks(4110),
                            ModifiedUserId = 0,
                            ModifiedUserName = "APP",
                            RootMenusId = 1010
                        },
                        new
                        {
                            Id = 1030,
                            ActionName = "Randevu Al",
                            ActionParameters = "",
                            AppModulesId = 1,
                            AreaName = "Randevu Al",
                            ControllerName = "Randevu Al",
                            CreatedDate = new DateTime(2024, 4, 7, 11, 2, 12, 154, DateTimeKind.Local).AddTicks(4112),
                            CreatedUser = "APP",
                            CreatedUserId = 0,
                            IconName = "Randevu Al",
                            IsActive = true,
                            MenuDesctiption = "Randevu Al",
                            MenuName = "Randevu Al asdasdasd2  ",
                            ModifiedDate = new DateTime(2024, 4, 7, 11, 2, 12, 154, DateTimeKind.Local).AddTicks(4113),
                            ModifiedUserId = 0,
                            ModifiedUserName = "APP",
                            RootMenusId = 1020
                        });
                });

            modelBuilder.Entity("AkarSoftware.HospitalApp.Entities.Concrete.Identities.AppModules", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("AppModules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 4, 7, 11, 2, 12, 154, DateTimeKind.Local).AddTicks(4329),
                            CreatedUser = "APP",
                            CreatedUserId = 0,
                            Description = "Herkesin Gördüğü Tanıtım Sayfası İçeriklerini içermektedir ",
                            IsActive = true,
                            ModifiedDate = new DateTime(2024, 4, 7, 11, 2, 12, 154, DateTimeKind.Local).AddTicks(4330),
                            ModifiedUserId = 0,
                            ModifiedUserName = "APP",
                            Name = "Landing"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 4, 7, 11, 2, 12, 154, DateTimeKind.Local).AddTicks(4331),
                            CreatedUser = "APP",
                            CreatedUserId = 0,
                            Description = "Bilgi İşlem Direktörlüğü ve Şirket sahiplerinin erişebildiği bir Modül ",
                            IsActive = true,
                            ModifiedDate = new DateTime(2024, 4, 7, 11, 2, 12, 154, DateTimeKind.Local).AddTicks(4332),
                            ModifiedUserId = 0,
                            ModifiedUserName = "APP",
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("AkarSoftware.HospitalApp.Entities.Concrete.Identities.AppRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppRoles");
                });

            modelBuilder.Entity("AkarSoftware.HospitalApp.Entities.Concrete.Identities.AppRolesMenus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppMenusId")
                        .HasColumnType("int");

                    b.Property<int>("AppRoleId")
                        .HasColumnType("int");

                    b.Property<int>("AppRolesId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppMenusId");

                    b.HasIndex("AppRolesId");

                    b.ToTable("AppRolesMenus");
                });

            modelBuilder.Entity("AkarSoftware.HospitalApp.Entities.Concrete.Identities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("BornDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("EmailAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailAdressConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<int>("GendersId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfilePhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorAuth")
                        .HasColumnType("bit");

                    b.Property<string>("UserMailAdress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GendersId");

                    b.ToTable("AppUser");
                });

            modelBuilder.Entity("AkarSoftware.HospitalApp.Entities.Concrete.Identities.AppUserRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("RolesId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("RolesId");

                    b.ToTable("AppUserRoles");
                });

            modelBuilder.Entity("AkarSoftware.HospitalApp.Entities.Concrete.Identities.Genders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedUserId")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 4, 7, 11, 2, 12, 154, DateTimeKind.Local).AddTicks(4433),
                            CreatedUser = "APP",
                            CreatedUserId = 0,
                            IsActive = true,
                            ModifiedDate = new DateTime(2024, 4, 7, 11, 2, 12, 154, DateTimeKind.Local).AddTicks(4434),
                            ModifiedUserId = 0,
                            ModifiedUserName = "APP",
                            Name = "Erkek"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 4, 7, 11, 2, 12, 154, DateTimeKind.Local).AddTicks(4435),
                            CreatedUser = "APP",
                            CreatedUserId = 0,
                            IsActive = true,
                            ModifiedDate = new DateTime(2024, 4, 7, 11, 2, 12, 154, DateTimeKind.Local).AddTicks(4436),
                            ModifiedUserId = 0,
                            ModifiedUserName = "APP",
                            Name = "Kadın"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 4, 7, 11, 2, 12, 154, DateTimeKind.Local).AddTicks(4437),
                            CreatedUser = "APP",
                            CreatedUserId = 0,
                            IsActive = true,
                            ModifiedDate = new DateTime(2024, 4, 7, 11, 2, 12, 154, DateTimeKind.Local).AddTicks(4438),
                            ModifiedUserId = 0,
                            ModifiedUserName = "APP",
                            Name = "Belirtmek İstemiyor"
                        });
                });

            modelBuilder.Entity("AkarSoftware.HospitalApp.Entities.Concrete.Identities.AppMenus", b =>
                {
                    b.HasOne("AkarSoftware.HospitalApp.Entities.Concrete.Identities.AppModules", "AppModules")
                        .WithMany("AppMenus")
                        .HasForeignKey("AppModulesId");

                    b.HasOne("AkarSoftware.HospitalApp.Entities.Concrete.Identities.AppMenus", "RootMenus")
                        .WithMany("ChildMenus")
                        .HasForeignKey("RootMenusId");

                    b.Navigation("AppModules");

                    b.Navigation("RootMenus");
                });

            modelBuilder.Entity("AkarSoftware.HospitalApp.Entities.Concrete.Identities.AppRolesMenus", b =>
                {
                    b.HasOne("AkarSoftware.HospitalApp.Entities.Concrete.Identities.AppMenus", "AppMenus")
                        .WithMany("AppRolesMenus")
                        .HasForeignKey("AppMenusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AkarSoftware.HospitalApp.Entities.Concrete.Identities.AppRoles", "AppRoles")
                        .WithMany("AppRolesMenus")
                        .HasForeignKey("AppRolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppMenus");

                    b.Navigation("AppRoles");
                });

            modelBuilder.Entity("AkarSoftware.HospitalApp.Entities.Concrete.Identities.AppUser", b =>
                {
                    b.HasOne("AkarSoftware.HospitalApp.Entities.Concrete.Identities.Genders", "Genders")
                        .WithMany("AppUsers")
                        .HasForeignKey("GendersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genders");
                });

            modelBuilder.Entity("AkarSoftware.HospitalApp.Entities.Concrete.Identities.AppUserRoles", b =>
                {
                    b.HasOne("AkarSoftware.HospitalApp.Entities.Concrete.Identities.AppUser", "AppUser")
                        .WithMany("AppUserRoles")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AkarSoftware.HospitalApp.Entities.Concrete.Identities.AppRoles", "Roles")
                        .WithMany("AppUserRoles")
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("AkarSoftware.HospitalApp.Entities.Concrete.Identities.AppMenus", b =>
                {
                    b.Navigation("AppRolesMenus");

                    b.Navigation("ChildMenus");
                });

            modelBuilder.Entity("AkarSoftware.HospitalApp.Entities.Concrete.Identities.AppModules", b =>
                {
                    b.Navigation("AppMenus");
                });

            modelBuilder.Entity("AkarSoftware.HospitalApp.Entities.Concrete.Identities.AppRoles", b =>
                {
                    b.Navigation("AppRolesMenus");

                    b.Navigation("AppUserRoles");
                });

            modelBuilder.Entity("AkarSoftware.HospitalApp.Entities.Concrete.Identities.AppUser", b =>
                {
                    b.Navigation("AppUserRoles");
                });

            modelBuilder.Entity("AkarSoftware.HospitalApp.Entities.Concrete.Identities.Genders", b =>
                {
                    b.Navigation("AppUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
